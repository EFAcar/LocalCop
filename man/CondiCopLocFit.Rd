% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CondiCopLocFit.R
\name{CondiCopLocFit}
\alias{CondiCopLocFit}
\title{Local likelihood estimation.}
\usage{
CondiCopLocFit(u1, u2, family, X, x, nx = 100, degree = c("linear",
  "constant"), eta, nu, kernel = KernEpa, band, optim_fun, cl = NA)
}
\arguments{
\item{u1}{Vector of first uniform response.}

\item{u2}{Vector of second uniform response.}

\item{family}{The copula family to use.  See \code{\link{ConvertPar}}.}

\item{X}{Vector of observed covariate values.}

\item{x}{Vector of covariate values within \code{range(X)} at which to fit the local likelihood.  Does not have to be a subset of \code{X}.}

\item{nx}{If \code{x} is missing, defaults to \code{nx} equally spaced values in \code{range(X)}.}

\item{degree}{Character vector specifying degree of local polynomial.  Either "constant" or "linear".}

\item{eta}{Optional initial value of the copula dependence parameter (scalar).  If missing will be estimated unconditionally by \code{VineCopula::BiCopEst}.}

\item{nu}{Optional initial value of other copula parameters (if they exist).  If missing will be estimated unconditionally by \code{VineCopula::BiCopEst}.}

\item{kernel}{Kernel function.  See \code{\link{KernFun}}.}

\item{band}{Bandwidth parameter (positive scalar).}

\item{optim_fun}{Optional optimization function to replace the default.  If provided, \code{optim_fun} should take a single argument corresponding the output of \code{\link{CondiCopLocFun}}, and return a scalar value corresponding to the estimate of \code{eta} at a given covariate value in \code{x}.}

\item{cl}{Optional parallel cluster created with \code{parallel::makeCluster}.  If \code{NA} runs serially.}
}
\value{
Vector of estimated dependence parameter \code{eta} at each value of \code{x}.
}
\description{
Local likelihood estimation.
}
